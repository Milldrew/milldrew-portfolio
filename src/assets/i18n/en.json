{
  "welcomeMessage": "Hello World",
  "introduction": "Introduction",
  "certifications": "Certifications",
  "AboutMeFirstP": "I am currently working for a company named Advaita Bio in Ann Arbor Michigan. The company is a bioinformatics company that sells subscriptions to a web application that provides tools for researchers to analyze and visualize biological data. I am the subject matter expert on the team for Angular. I am intrinsically motivated to master Angular. I believe that being able to rapidly create user interfaces that are a  delight for users to use is a key fundamental skill of Software Engineering. I also use cloud computing services like Google Cloud Platform and Amazon Web Services. To build application servers or cli applications I use node.js",
  "footerStatement": "Created by Andrew Miller",
  "projectsHeader": "Andrew's Recent Projects",
  "robotTitle": "Robot Photographer",
  "robotSubTitle": "Developer Tool",
  "robotContent": "The Robot Photographer emulates many device sizes and retrieves screenshots for you.",
  "robotMoreContent": "This app runs a containerized puppeteer service on the backend. The user can use a URL and a css selector to take screen shots. Puppeteer writes the files to a folder and the nestjs statically serves them. Introspect I probably would have used playwright instead of puppeteer, and instead of statically serving the photos. I would resolve them in memory as buffers, and then render their URL in the browser using the Image Api. Playwright was created by the same people who started puppetter, except it appears to be a lot better, it supports multiple browsers, and has automatic wait",
  "todoTitle": "Todo List",
  "todoSubTitle": "Productivity Tool",
  "todoContent": "This is a basic todolist. It was built with  angular,  nestjs, postgresql deployed to google cloud.",
  "todoMoreContent": "Cloud build watches my github repostiory. When I make a new commit to the master branch cloud build will use the new code to create an image with the Dockerfile. Then it will use the new image to deploy the respective container to cloud run.",
  "onsaveTitle": "onsave",
  "onsaveSubTitle": "Developer Tool",
  "onsaveContent": "A simple to use, file watching cli.",
  "onsaveMoreContent": "The package exports the cli onsave. The first argument is the path to the file, and the second argument is the command that you want to run each time the file is saved. The CLI does work for hanging process like an http server. The handler command can be multiple arguments. It is also possible to write a bash script and then run the bash script each time the file is saved. This is one of the only old projects that survived from me deleting all my repos. I am happy it did! Because it comes in clutch when there is no --watch option.",
  "mineTitle": "Minewalker",
  "mineSubTitle": "Entertainment",
  "mineContent": "This is a minewsweeper like game that I built in two days with Angular",
  "mineMoreContent": "You can move the frog square to square by clicking on adjacent squares. If you get the star you will get points! This was one of the first projects I did when I switched from heavily using React to heavily using Angular. I did it for free university credit for a computer science course. After reviewing all of my options I decided I am better off getting a cloud computing degree. Right Now I am studying for Cloud Computing Certifications that can be subsituted for university credits.",
  "libTitle": "Angular Library",
  "libSubTitle": "Developer Tool",
  "libContent": "This is my personal angular library. It is for angular code that I want to reuse across other projects.",
  "libMoreContent": "For example if I create an Angular Material theme in scss that I want to reuse I can package it in this library. If I create a directive that I want to reuse I can package it in this library.",
  "home": "Home",
  "menu": "Menu",
  "projects": "Projects",
  "certifications": "Certifications",
  "degrees": "Degrees",
  "deepPurpleAmber": "Deep Purple Amber",
  "indigoPink": "Indigo Pink (light)",
  "pinkBlueGray": "Pink Blue Gray",
  "purpleGreen": "Purple Green",
  "handwriting": "Handwriting",
  "monospace": "Monospace",
  "serif": "Serif",
  "sansSerif": "Sans-Serif",
  "coldTitle": "COLD Certification",
  "coldSubTitle": "Community Service UAF",
  "coldContent": "This certificate was awarded for my community service work while going to UAF.",
  "serviceDeveloper": "Service Developer",
  "website": "Website",
  "applicationDeveloper": "Application Developer",
  "openJSFoundation": "OpenJS Foundation",
  "openJSFoundationContent": "This certificate was awarded via a strict monitored live programming exam."
}
